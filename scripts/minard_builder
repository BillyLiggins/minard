#!/usr/bin/env python
from subprocess import Popen, PIPE
import shlex
import atexit
from redis import Redis

redis = Redis()

def tail_worker(user, host, ssh_key):
    cmd = 'ssh -i %s -o StrictHostKeyChecking=no %s@%s tail_log_ssh data_temp' % (ssh_key,user,host)
    p = Popen(shlex.split(cmd), stdout=PIPE, stderr=PIPE)

    @atexit.register
    def stop():
        p.kill()
        p.wait()

    while True:
        line = p.stdout.readline()

        i = redis.incr('builder/global:next')
        # expire after one hour
        expire = 60*60
        key = 'builder/id:{0:d}:msg'.format(i)
        redis.set(key,line)
        redis.expire(key,expire)

        if not line:
            break

    p.kill()
    p.wait()

if __name__ == '__main__':
    import argparse
    import time
    import sys

    parser = argparse.ArgumentParser(description='Add builder log to redis database')
    parser.add_argument('--host', default='builder1.sp.snolab.ca')
    parser.add_argument('--user', default='snotdaq')
    parser.add_argument('ssh_key', help='path to builder ssh key')
    args = parser.parse_args()

    while True:
        try:
            tail_worker(args.user, args.host, args.ssh_key)
        except Exception as e:
            sys.stderr.write(str(e) + '\n')

        time.sleep(10)
