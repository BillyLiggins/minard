set -e
sudo -v || exit

if hash redis-server 2>/dev/null; then
    echo "redis-server already installed..."
else
    echo "installing redis..."
    cd /usr/local
    sudo curl -O http://download.redis.io/redis-stable.tar.gz
    sudo tar -xzvf redis-stable.tar.gz
    cd redis-stable
    sudo make
    sudo make install
fi

if [ ! -d /etc/redis ]; then
    sudo mkdir /etc/redis
fi

if [ ! -d /var/redis ]; then
    sudo mkdir /var/redis
fi

# install redis init script
sudo curl -o /etc/init.d/redis_6379 https://raw.githubusercontent.com/tlatorre-uchicago/minard/master/utils/redis_6379
sudo chmod +x /etc/init.d/redis_6379
sudo curl -o /etc/redis/6379.conf https://raw.githubusercontent.com/tlatorre-uchicago/minard/master/utils/redis.conf

# start redis
sudo /etc/init.d/redis_6379 start

if [ -f /etc/debian_version ]; then
    sudo update-rc.d redis_6379 defaults
else
    if [ -f /etc/redhat-release ]; then
        sudo chkconfig --add redis_6379
        sudo chkconfig --level 2345 redis_6379 on
    fi
fi

if [ ! -d /opt/minard ]; then
    sudo mkdir /opt/minard
    sudo chown $USER /opt/minard
fi

if [ ! -f /opt/minard/bin/activate ]; then
    virtualenv /opt/minard
fi

cd /opt/minard
source bin/activate

if [ ! -d /opt/minard/src ]; then
    mkdir src
fi

cd src

if [ ! -d /opt/minard/src/minard ]; then
    git clone git@github.com:tlatorre-uchicago/minard.git
    pip install ./minard
fi

sudo curl -o /etc/init.d/gunicorn https://raw.githubusercontent.com/tlatorre-uchicago/minard/master/utils/gunicorn
sudo chmod +x /etc/init.d/gunicorn

# start gunicorn
sudo /etc/init.d/gunicorn start

if [ -f /etc/debian_version ]; then
    sudo update-rc.d gunicorn defaults
else
    if [ -f /etc/redhat-release ]; then
        sudo chkconfig --add gunicorn
        sudo chkconfig --level 2345 gunicorn on
    fi
fi

if [ ! -d /opt/minard/src/root ]; then
    # install Root
    curl -O ftp://root.cern.ch/root/root_v5.34.01.source.tar.gz
    tar -xzvf root_v5.34.01.source.tar.gz
    cd root
    ./configure --enable-minuit2 --enable-python
    make -j4
    source bin/thisroot.sh
    cd ..
    echo "source $VIRTUAL_ENV/src/root/bin/thisroot.sh" >> $VIRTUAL_ENV/bin/activate
fi

if [ ! -d /opt/minard/src/geant4.9.5.p01 ]; then
    # install Geant4
    curl -O http://geant4.cern.ch/support/source/geant4.9.5.p01.tar.gz
    tar -xzvf geant4.9.5.p01.tar.gz
    mkdir geant4.9.5.p01-build
    cd geant4.9.5.p01-build
    cmake -DCMAKE_INSTALL_PREFIX=$VIRTUAL_ENV/src/geant4.9.5.p01 $VIRTUAL_ENV/src/geant4.9.5.p01 
    make
    make install
    cd ..
    source geant4.9.5.p01/bin/geant4.sh
    echo "source $VIRTUAL_ENV/src/geant4.9.5.p01/bin/geant4.sh" >> $VIRTUAL_ENV/bin/activate
fi

if [ ! -d /opt/minard/src/rat ]; then
    # RAT
    git clone git@github.com:snoplus/rat
    cd rat
    # need to go back to release 4.5.0
    git checkout 12c07de85f0f24b824ce2ff5c3ac4b193bea680d
    ./configure
    source env.sh
    scons -j4
    cd ..
    echo "source $VIRTUAL_ENV/src/rat/env.sh" >> $VIRTUAL_ENV/bin/activate
fi

if [ ! -d /opt/minard/src/rat-tools ]; then
    # rat-tools
    git clone git@github.com:snoplus/rat-tools.git
    cd rat-tools/ratzdab
    make
    source env.sh
    echo "source $VIRTUAL_ENV/src/rat-tools/ratzdab/env.sh" >> $VIRTUAL_ENV/bin/activate
fi
