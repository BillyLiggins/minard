#!/usr/bin/env bash
set -e; sudo -v || exit

add_service () {
    # adds an init script service to chkconfig or update-rc.d
    if [ -f /etc/debian_version ]; then
        sudo update-rc.d $1 defaults
    elif [ -f /etc/redhat-release ]; then
        sudo chkconfig --add $1
        sudo chkconfig --level 2345 $1 on
    else
        echo "Error! Couldn't determine Linux distribution!"
        echo "no /etc/debian_version or /etc/redhat-release file"
        exit 1
    fi
}
    
if [ ! -f /usr/local/bin/redis-server ]; then
    # install redis to /usr/local
    printf "Installing redis..."
    cd /usr/local
    sudo curl -O -s http://download.redis.io/redis-stable.tar.gz
    sudo tar -xzf redis-stable.tar.gz
    cd redis-stable
    sudo make &>/tmp/redis.log
    sudo make install &>/tmp/redis.log
    printf "Done\n"
fi

# make directories for redis
# see "Installing Redis more properly" at http://redis.io/topics/quickstart
sudo mkdir -p /etc/redis /var/redis /opt/redis

# install redis init script
sudo curl -s -o /etc/init.d/redis_6379 \
https://raw.githubusercontent.com/tlatorre-uchicago/minard/master/init/redis_6379

# make it executable
sudo chmod +x /etc/init.d/redis_6379

# redis configuration file
# this is where, for example, the location of the backup image is configured
sudo curl -s -o /etc/redis/6379.conf \
https://raw.githubusercontent.com/tlatorre-uchicago/minard/master/etc/redis.conf

# add redis service and start it
add_service redis_6379
sudo /etc/init.d/redis_6379 start

if [ ! -d /opt/minard ]; then
    sudo mkdir /opt/minard
    sudo chown $USER /opt/minard
fi

if [ ! -f /opt/minard/bin/activate ]; then
    # create virtual environment
    virtualenv --no-site-packages /opt/minard
fi

cd /opt/minard
source bin/activate

pip install -qq supervisor

if [ ! -d /opt/minard/src ]; then
    mkdir src
fi

if [ ! -d /opt/minard/src/minard ]; then
    printf "Installing minard..."
    cd $VIRTUAL_ENV/src
    git clone -q git@github.com:tlatorre-uchicago/minard.git
    pip install -qq ./minard
    cd minard/doc
    make html
    cp -r _build/html /opt/minard/www/static/doc
    printf "Done\n"
fi

if [ ! -d /opt/minard/src/disp ]; then
    printf "Installing disp..."
    cd $VIRTUAL_ENV/src
    git clone -q git@github.com:tlatorre-uchicago/disp.git
    cd disp
    make &>/tmp/disp.log
    printf "Done\n"
fi

echo "export PYTHONPATH=$VIRTUAL_ENV/src/disp/python:$PYTHONPATH" >> $VIRTUAL_ENV/bin/activate

# make sure www-data user exists
if ! id -u www-data 2>/dev/null; then
    echo "Adding www-data user..."
    sudo useradd -r www-data
fi

# make sure snoplusmon user exists
if ! id -u snoplusmon 2>/dev/null; then
    echo "Adding snoplusmon user..."
    sudo useradd -d snoplusmon
    # create a .ssh folder for the builder key
    sudo mkdir /home/snoplusmon/.ssh
    sudo chown snoplusmon:snoplusmon /home/snoplusmon/.ssh
    sudo chmod 700 /home/snoplusmon/.ssh
fi

# download gunicorn init script
sudo curl -s -o /etc/init.d/gunicorn \
https://raw.githubusercontent.com/tlatorre-uchicago/minard/master/init/gunicorn

# make it executable
sudo chmod +x /etc/init.d/gunicorn

# add and start gunicorn
add_service gunicorn
sudo /etc/init.d/gunicorn start

# create /etc/minard
sudo mkdir -p /etc/minard

cd $VIRTUAL_ENV/src/minard

if [ -f /etc/debian_version ]; then
    sudo cp init/supervisord_debian /etc/init.d/supervisord
elif [ -f /etc/redhat-release ]; then
    sudo cp init/supervisord_redhat /etc/init.d/supervisord
else
    echo "Error! Couldn't determine Linux distribution!"
    echo "no /etc/debian_version or /etc/redhat-release file"
    exit 1
fi

add_service supervisord

sudo cp etc/supervisord.conf /etc/supervisord.conf

echo "done! Make sure to copy the builder key to /home/snoplusmon/.ssh/id_rsa_builder."
